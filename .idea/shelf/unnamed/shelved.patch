Index: src/main/java/com/example/project_2/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_2;\r\n\r\nimport Cards.Card;\r\nimport Game.GameSession;\r\nimport Game.Player;\r\nimport javafx.animation.TranslateTransition;\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Line;\r\nimport javafx.scene.shape.LineTo;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.net.MalformedURLException;\r\nimport java.util.ArrayList;\r\n\r\npublic class HelloApplication extends Application {\r\n    private GameSession g = null;\r\n    private ImageView[] iv = new ImageView[5];\r\n    private ArrayList<ImageView> deck = new ArrayList<>();\r\n    private Stage stage = new Stage();\r\n    private EventHandler<javafx.scene.input.MouseEvent> eh1;\r\n    private EventHandler<javafx.scene.input.MouseEvent> eh2;\r\n    private EventHandler<javafx.scene.input.MouseEvent> eh3;\r\n    private Rectangle[] rects = {new Rectangle(30, 250, 120, 200),new Rectangle(180, 250, 120, 200),new Rectangle(330, 250, 120, 200)};\r\n    private Text score1= new Text();\r\n    private Text score2= new Text();\r\n    private Text currrentPlayer = new Text(\"Current player: \");\r\n    private int ammountOfPLayers = 2;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        Button play_match = new Button(\"Play match\");\r\n        Button exit = new Button(\"Exit\");\r\n\r\n        Group menuRoot = new Group();\r\n        menuRoot.getChildren().add(play_match);\r\n\r\n        exit.setPrefSize(200,50);\r\n        exit.setLayoutY(150);\r\n        exit.setLayoutX(170);\r\n        play_match.setPrefSize(200,50);\r\n        play_match.setLayoutY(50);\r\n        play_match.setLayoutX(170);\r\n        Button bMenu = new Button(\"Settings\");\r\n        bMenu.setPrefSize(200,50);\r\n        bMenu.setLayoutY(100);\r\n        bMenu.setLayoutX(170);\r\n        menuRoot.getChildren().add(bMenu);\r\n\r\n\r\n\r\n        menuRoot.getChildren().add(exit);\r\n        Color background = Color.rgb(60, 124, 83);\r\n        Scene MainScene = new Scene(menuRoot, 540, 280, background);\r\n\r\n        Stage menuWindow = new Stage();\r\n        menuWindow.setTitle(\"Second Stage\");\r\n        menuWindow.setScene(MainScene);\r\n        EventHandler<ActionEvent> startGameFromMenu = new EventHandler<>() {\r\n            public void handle(ActionEvent e)\r\n            {\r\n                try {\r\n                    menuWindow.close();\r\n                    restart(stage);\r\n                } catch (MalformedURLException | FileNotFoundException ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n        EventHandler<ActionEvent> exit_event = new EventHandler<>() {\r\n            public void handle(ActionEvent e)\r\n            {\r\n                menuWindow.close();\r\n                cleanup(stage);\r\n            }\r\n        };\r\n        exit.setOnAction(exit_event);\r\n\r\n        play_match.setOnAction(startGameFromMenu);\r\n\r\n        EventHandler<ActionEvent> settingsEvent = new EventHandler<>() {\r\n            public void handle(ActionEvent e)\r\n            {\r\n                ComboBox<String> howManyPlayers = new ComboBox<String>();\r\n\r\n                ComboBox<String> skin = new ComboBox<String>();\r\n                skin.getItems().add(\"default\");\r\n                skin.setPromptText(\"Choose the skin\");\r\n\r\n                howManyPlayers.setPromptText(\"Choose the amount of players\");\r\n                howManyPlayers.getItems().add(\"2\");\r\n                howManyPlayers.getItems().add(\"4\");\r\n                howManyPlayers.getItems().add(\"6\");\r\n\r\n\r\n                Button save_and_exit = new Button(\"Save and exit\");\r\n\r\n                Group settingsRoot = new Group();\r\n                settingsRoot.getChildren().add(howManyPlayers);\r\n                skin.setPrefSize(240,50);\r\n                skin.setLayoutY(150);\r\n                skin.setLayoutX(150);\r\n                howManyPlayers.setPrefSize(240,50);\r\n                howManyPlayers.setLayoutY(100);\r\n                howManyPlayers.setLayoutX(150);\r\n                save_and_exit.setPrefSize(240,50);\r\n                save_and_exit.setLayoutY(50);\r\n                save_and_exit.setLayoutX(150);\r\n\r\n\r\n\r\n\r\n                settingsRoot.getChildren().add(skin);\r\n                settingsRoot.getChildren().add(save_and_exit);\r\n\r\n\r\n\r\n\r\n\r\n                Scene settingScene = new Scene(settingsRoot, 540, 280);\r\n\r\n                // New window (Stage)\r\n                Stage menu = new Stage();\r\n                menu.setScene(settingScene);\r\n\r\n                menu.setTitle(\"Setting\");\r\n                menu.setScene(settingScene);\r\n\r\n                EventHandler<ActionEvent> event = new EventHandler<>() {\r\n                    public void handle(ActionEvent e)\r\n                    {\r\n                        try {\r\n                            menu.close();\r\n                            restart(stage);\r\n                        } catch (MalformedURLException ex) {\r\n                            ex.printStackTrace();\r\n                        } catch (FileNotFoundException ex) {\r\n                            ex.printStackTrace();\r\n                        }\r\n                    }\r\n                };\r\n                EventHandler<ActionEvent> event2 = new EventHandler<>() {\r\n                    public void handle(ActionEvent e)\r\n                    {\r\n                        menu.close();\r\n\r\n                    }\r\n                };\r\n                EventHandler<ActionEvent> howManyPlayersEvent = new EventHandler<>() {\r\n                    public void handle(ActionEvent e)\r\n                    {\r\n                        ammountOfPLayers = Integer.parseInt(howManyPlayers.getValue());\r\n                    }\r\n                };\r\n                howManyPlayers.setOnAction(howManyPlayersEvent);\r\n                save_and_exit.setOnAction(event2);\r\n                menu.setScene(settingScene);\r\n\r\n                menu.show();\r\n            }\r\n        };\r\n\r\n        bMenu.setOnAction(settingsEvent);\r\n\r\n\r\n\r\n        // Set position of second window, related to primary window.\r\n        menuWindow.setX(200);\r\n        menuWindow.setY(100);\r\n        menuWindow.show();\r\n\r\n\r\n\r\n\r\n\r\n\r\n     //     }\r\n    }\r\n    private void initGame(Stage stage) throws MalformedURLException, FileNotFoundException {\r\n        EventHandler<javafx.scene.input.MouseEvent> eh1 = new EventHandler<javafx.scene.input.MouseEvent>() {\r\n\r\n            @Override\r\n            public void handle(javafx.scene.input.MouseEvent event) {\r\n\r\n                try {\r\n                    iv[3].setImage(g.players.get(g.currentPlayer).getHand().get(0).getImage(false));\r\n                } catch (FileNotFoundException | MalformedURLException e) {\r\n                    //e.printStackTrace();\r\n                }\r\n                iv[3].setVisible(true);\r\n\r\n                g.playTurn(g.players.get(g.currentPlayer).getHand().get(0));\r\n\r\n                for(int i = 0; i < 3; i++) {\r\n                    try {\r\n                        iv[i].setImage(g.players.get(g.currentPlayer).getHand().get(i).getImage(true));\r\n                    } catch (FileNotFoundException | IndexOutOfBoundsException | MalformedURLException e) {\r\n                        //e.printStackTrace();\r\n                        iv[i].setVisible(false);\r\n                        rects[i].setVisible(false);\r\n                        if(i==0){\r\n                            gameOver(stage);\r\n                        }\r\n                    }\r\n                }\r\n                for (int i = g.deck.size()+2; i < deck.size(); i++) {\r\n                    if(g.deck.isEmpty()){\r\n                        deck.get(i).setVisible(false);\r\n                    }\r\n\r\n                    if (!deck.get(i).isVisible()) {\r\n                        break;\r\n                    }\r\n                    deck.get(i).setVisible(false);\r\n\r\n                }\r\n                iv[3].setVisible(!g.Table.isEmpty());\r\n                currrentPlayer.setText(\"Current player: \" + (g.currentPlayer+1));\r\n                if(!g.isTeamGame) {\r\n                    score1.setText(\"Player 1: \" + g.players.get(0).Score());\r\n                    score2.setText(\"Player 2: \" + g.players.get(1).Score());\r\n                }\r\n                else{\r\n                    score1.setText(\"Team 1: \" + g.getScoreForTeam(0));\r\n                    score2.setText(\"Team 2: \" + g.getScoreForTeam(1));\r\n\r\n\r\n                }\r\n            }\r\n        };\r\n        EventHandler<javafx.scene.input.MouseEvent> eh2 = new EventHandler<javafx.scene.input.MouseEvent>() {\r\n\r\n            @Override\r\n            public void handle(javafx.scene.input.MouseEvent event) {\r\n                try {\r\n                    iv[3].setImage((g.players.get(g.currentPlayer).getHand().get(0).getImage(false)));\r\n                } catch (FileNotFoundException| IndexOutOfBoundsException  | MalformedURLException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                iv[3].setVisible(true);\r\n\r\n                g.playTurn(g.players.get(g.currentPlayer).getHand().get(1));\r\n\r\n                for(int i = 0; i < 3; i++) {\r\n                    try {\r\n                        iv[i].setImage((g.players.get(g.currentPlayer).getHand().get(i).getImage(true)));\r\n                    } catch (FileNotFoundException| IndexOutOfBoundsException  | MalformedURLException e) {\r\n                        //e.printStackTrace();\r\n                        iv[i].setVisible(false);\r\n                        rects[i].setVisible(false);\r\n                        if(i==0){\r\n                            gameOver(stage);\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n                for (int i = g.deck.size()+2; i < deck.size(); i++) {\r\n                    if(g.deck.isEmpty()){\r\n                        deck.get(i).setVisible(false);\r\n                    }\r\n                    if (!deck.get(i).isVisible()) {\r\n                        break;\r\n                    }\r\n                    deck.get(i).setVisible(false);\r\n\r\n                }\r\n                if(g.Table.isEmpty()){\r\n                    iv[3].setVisible(false);\r\n                }\r\n                else{\r\n                    iv[3].setVisible(true);\r\n\r\n                }\r\n                currrentPlayer.setText(\"Current player: \" + (g.currentPlayer+1));\r\n                if(!g.isTeamGame) {\r\n                    score1.setText(\"Player 1: \" + g.players.get(0).Score());\r\n                    score2.setText(\"Player 2: \" + g.players.get(1).Score());\r\n                }\r\n                else{\r\n                    score1.setText(\"Team 1: \" + g.getScoreForTeam(0));\r\n                    score2.setText(\"Team 2: \" + g.getScoreForTeam(1));\r\n\r\n\r\n                }\r\n            }\r\n        };\r\n        EventHandler<javafx.scene.input.MouseEvent> eh3 = new EventHandler<javafx.scene.input.MouseEvent>() {\r\n\r\n            @Override\r\n            public void handle(javafx.scene.input.MouseEvent event) {\r\n                try {\r\n                    iv[3].setImage((g.players.get(g.currentPlayer).getHand().get(0).getImage(false)));\r\n                } catch (FileNotFoundException | IndexOutOfBoundsException | MalformedURLException e) {\r\n                    //e.printStackTrace();\r\n                }\r\n                iv[3].setVisible(true);\r\n                g.playTurn(g.players.get(g.currentPlayer).getHand().get(2));\r\n                for(int i = 0; i < 3; i++) {\r\n                    try {\r\n                        iv[i].setImage(g.players.get(g.currentPlayer).getHand().get(i).getImage(true));\r\n                    } catch (FileNotFoundException| IndexOutOfBoundsException | MalformedURLException e) {\r\n                        //e.printStackTrace();\r\n                        iv[i].setVisible(false);\r\n                        rects[i].setVisible(false);\r\n                        if(i==0){\r\n                            gameOver(stage);\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n                for (int i = g.deck.size()+2; i < deck.size(); i++) {\r\n                    if(g.deck.isEmpty()){\r\n                        deck.get(i).setVisible(false);\r\n                    }\r\n                    if (!deck.get(i).isVisible()) {\r\n                        break;\r\n                    }\r\n                    deck.get(i).setVisible(false);\r\n\r\n                }\r\n                iv[3].setVisible(!g.Table.isEmpty());\r\n                currrentPlayer.setText(\"Current player: \" + (g.currentPlayer+1));\r\n                if(!g.isTeamGame) {\r\n                    score1.setText(\"Player 1: \" + g.players.get(0).Score());\r\n                    score2.setText(\"Player 2: \" + g.players.get(1).Score());\r\n                }\r\n                else{\r\n                    score1.setText(\"Team 1: \" + g.getScoreForTeam(0));\r\n                    score2.setText(\"Team 2: \" + g.getScoreForTeam(1));\r\n\r\n\r\n                }\r\n            }\r\n        };\r\n        g = new GameSession(ammountOfPLayers);\r\n        score1 = new Text(20, 20, \"Player 1: \" + g.players.get(0).Score());\r\n        score2 = new Text(420, 20, \"Player 2: \" + g.players.get(1).Score());\r\n        currrentPlayer = new Text(0, 50, \"Current player: \" + g.currentPlayer);\r\n        g.startRound();\r\n        // while (true) {\r\n        Card.Number cardNumber = g.deck.getBriscola().number;\r\n        Card.Suit briscsuit = g.deck.getBriscola().suit;\r\n        System.out.println(briscsuit+\" \"+cardNumber);\r\n        String userHome = System.getProperty(\"user.dir\");;\r\n        Image imageForFile = new Image(userHome+\"\\\\PNG-cards-1.3/\"+cardNumber+\"_of_\"+briscsuit+\".png\");\r\n        Text suit = new Text(220, 20, \"Briscola: \" + g.deck.getBriscola().suit);\r\n\r\n        deck.add(0, new ImageView(g.deck.get(0).getImage(true)));\r\n        deck.get(0).setFitWidth(120);\r\n        deck.get(0).setFitHeight(200);\r\n        deck.get(0).setRotate(-90);\r\n        deck.get(0).setX(330);\r\n        deck.get(0).setY(80);\r\n\r\n        deck.get(0).setPreserveRatio(true);\r\n\r\n        deck.get(0).setVisible(true);\r\n\r\n        for (int i = 1; i < g.deck.size(); i++) {\r\n\r\n\r\n            deck.add(i, new ImageView(g.deck.get(i).getImage(false)));\r\n            deck.get(i).setFitWidth(120);\r\n            deck.get(i).setFitHeight(200);\r\n\r\n            deck.get(i).setX(330+i);\r\n            deck.get(i).setY(80-i);\r\n\r\n            deck.get(i).setPreserveRatio(true);\r\n\r\n            deck.get(i).setVisible(true);\r\n        }\r\n        iv[3] = new ImageView((g.players.get(g.currentPlayer).getHand().get(0).getImage(true)));\r\n        iv[3].setX(180);\r\n        iv[3].setY(60);\r\n        iv[3].setFitWidth(120);\r\n        iv[3].setFitHeight(200);\r\n        iv[3].setPreserveRatio(true);\r\n        iv[3].setVisible(false);\r\n        iv[0] = new ImageView((g.players.get(g.currentPlayer).getHand().get(0).getImage(true)));\r\n        iv[0].setX(30);\r\n        iv[0].setY(250);\r\n        iv[0].setFitHeight(200);\r\n        iv[0].setFitWidth(120);\r\n        iv[0].setPreserveRatio(true);\r\n        iv[0].setOnMouseClicked(eh1);\r\n        iv[1] = new ImageView((g.players.get(g.currentPlayer).getHand().get(1).getImage(true)));\r\n        iv[1].setX(180);\r\n        iv[1].setY(250);\r\n        iv[1].setFitHeight(200);\r\n        iv[1].setFitWidth(120);\r\n        iv[1].setPreserveRatio(true);\r\n        iv[1].setOnMouseClicked(eh2);\r\n        iv[2] = new ImageView((g.players.get(g.currentPlayer).getHand().get(2).getImage(true)));\r\n        iv[2].setX(330);\r\n        iv[2].setY(250);\r\n        iv[2].setFitHeight(200);\r\n        iv[2].setFitWidth(120);\r\n        iv[2].setPreserveRatio(true);\r\n        iv[2].setOnMouseClicked(eh3);\r\n        for (int j = 0; j < 2; j++) {\r\n            System.out.println(\"Player Number: \" + j);\r\n            System.out.println(\"\");\r\n            for (int i = 0; i < g.players.get(j).getHand().size(); i++) {\r\n                System.out.println(g.players.get(j).getHand().get(i));\r\n            }\r\n            System.out.println(\"\");}\r\n           /* Scanner n = new Scanner(System.in);\r\n            System.out.println(\"Current Player:\" + g.currentPlayer);\r\n            int choice = n.nextInt();\r\n            g.playTurn(g.players.get(g.currentPlayer).getHand().get(choice));\r\n            System.out.println(\"\");\r\n\r\n            System.out.println(g.players.get(0).Score());\r\n            System.out.println(g.players.get(1).Score()); */\r\n        Group root = new Group(rects[0], rects[1], rects[2], score1, score2, suit, iv[0],iv[1],iv[2],iv[3], currrentPlayer);\r\n        for (int i = 0; i < g.deck.size(); i++) {\r\n            root.getChildren().add(deck.get(i));\r\n        }\r\n        Scene scene = new Scene(root, Color.GREEN);\r\n        stage.setTitle(\"Briscola\");\r\n        stage.setScene(scene);\r\n        stage.setHeight(500);\r\n        stage.setWidth(700);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n    private void gameOver(Stage stage){\r\n        Button b = new Button(\"Play another match\");\r\n        Button b2 = new Button(\"Exit\");\r\n\r\n        Group root2 = new Group();\r\n        root2.getChildren().add(b);\r\n\r\n        Text gameOver = new Text(\"Game over\");\r\n        gameOver.setX(200);\r\n        gameOver.setY(100);\r\n\r\n        root2.getChildren().add(gameOver);\r\n        Text whoWon = null;\r\n        if(!g.isTeamGame){\r\n            int whichPlayerWon = 1;\r\n\r\n            if(g.players.get(0).Score()<g.players.get(1).Score()){\r\n                whichPlayerWon=2;\r\n                whoWon= new Text(\"The winning player is: \" + whichPlayerWon);\r\n\r\n            }\r\n        }\r\n        else{\r\n            int whichPlayerWon = 1;\r\n\r\n            if(g.getScoreForTeam(1)>g.getScoreForTeam(0)){\r\n                whichPlayerWon=2;\r\n            }\r\n            whoWon = new Text(\"The winning team is: \" + whichPlayerWon);\r\n        }\r\n        whoWon.setY(50);\r\n        b2.setLayoutY(60);\r\n\r\n        root2.getChildren().add(whoWon);\r\n        root2.getChildren().add(b2);\r\n\r\n\r\n        Scene secondScene = new Scene(root2, 540, 280);\r\n\r\n        // New window (Stage)\r\n        Stage newWindow = new Stage();\r\n        newWindow.setTitle(\"Second Stage\");\r\n        newWindow.setScene(secondScene);\r\n        EventHandler<ActionEvent> event = new EventHandler<>() {\r\n            public void handle(ActionEvent e)\r\n            {\r\n                try {\r\n                    newWindow.close();\r\n                    restart(stage);\r\n                } catch (MalformedURLException ex) {\r\n                    ex.printStackTrace();\r\n                } catch (FileNotFoundException ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n        EventHandler<ActionEvent> event2 = new EventHandler<>() {\r\n            public void handle(ActionEvent e)\r\n            {\r\n                newWindow.close();\r\n                cleanup(stage);\r\n            }\r\n        };\r\n        b2.setOnAction(event2);\r\n\r\n        b.setOnAction(event);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // Set position of second window, related to primary window.\r\n        newWindow.setX(0);\r\n        newWindow.setY(0);\r\n        newWindow.show();\r\n\r\n    }\r\n    public void restart (Stage stage) throws MalformedURLException, FileNotFoundException {\r\n        cleanup(stage);\r\n        stage = new Stage();\r\n        initGame(stage);\r\n    }\r\n    public void cleanup(Stage stage){\r\n        stage.hide();\r\n        g = null;\r\n        iv = new ImageView[5];\r\n        deck.clear();\r\n        EventHandler<javafx.scene.input.MouseEvent> eh1;\r\n        EventHandler<javafx.scene.input.MouseEvent> eh2;\r\n        EventHandler<javafx.scene.input.MouseEvent> eh3;\r\n        Rectangle[] rects = {new Rectangle(30, 250, 120, 200),new Rectangle(180, 250, 120, 200),new Rectangle(330, 250, 120, 200)};\r\n        Text score1= new Text();\r\n        Text score2= new Text();\r\n        Text currrentPlayer = new Text(\"Current player: \");\r\n\r\n    }\r\n    public void drawAnimation(int whichPlayer){\r\n        for (int i = 0; i < 3; i++) {\r\n            if(!iv[i].isVisible()){\r\n                TranslateTransition animation = new TranslateTransition();\r\n                animation.setByX((deck.get(deck.size()-1).getX()-iv[i].getX()));\r\n                animation.setByY((deck.get(deck.size()-1).getY()-iv[i].getY()));\r\n\r\n                animation.setDuration(Duration.millis(1000));\r\n\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/project_2/HelloApplication.java b/src/main/java/com/example/project_2/HelloApplication.java
--- a/src/main/java/com/example/project_2/HelloApplication.java	(revision 650a76541e1c143cd99a54fb8ca3a6bbc4864072)
+++ b/src/main/java/com/example/project_2/HelloApplication.java	(date 1665574038726)
@@ -20,6 +20,7 @@
 import javafx.scene.shape.LineTo;
 import javafx.scene.shape.Rectangle;
 import javafx.scene.text.Font;
+import javafx.scene.text.FontWeight;
 import javafx.scene.text.Text;
 import javafx.stage.Stage;
 import javafx.util.Duration;
@@ -37,11 +38,12 @@
     private EventHandler<javafx.scene.input.MouseEvent> eh1;
     private EventHandler<javafx.scene.input.MouseEvent> eh2;
     private EventHandler<javafx.scene.input.MouseEvent> eh3;
-    private Rectangle[] rects = {new Rectangle(30, 250, 120, 200),new Rectangle(180, 250, 120, 200),new Rectangle(330, 250, 120, 200)};
+    private Rectangle[] rects = {new Rectangle(30, 450, 120, 200),new Rectangle(180, 450, 120, 200),new Rectangle(330, 450, 120, 200)};
     private Text score1= new Text();
     private Text score2= new Text();
     private Text currrentPlayer = new Text("Current player: ");
     private int ammountOfPLayers = 2;
+    private String userHome = System.getProperty("user.dir");
 
 
 
@@ -54,26 +56,37 @@
         Group menuRoot = new Group();
         menuRoot.getChildren().add(play_match);
 
+        Text title = new Text(250, 200, "Briscola");
+        title.setFill(Color.YELLOW);
+        title.setStrokeWidth(2);
+        title.setStroke(Color.BLACK);
+        title.setFont(Font.font("verdana", 100));
+        menuRoot.getChildren().add(title);
+
+        Text subtitle = new Text(260, 230, "by Group 13: The Briscola Bois");
+        subtitle.setFont(Font.font("verdana", FontWeight.BOLD, 10));
+        menuRoot.getChildren().add(subtitle);
+
         exit.setPrefSize(200,50);
-        exit.setLayoutY(150);
-        exit.setLayoutX(170);
+        exit.setLayoutY(400); //150
+        exit.setLayoutX(650); //170
         play_match.setPrefSize(200,50);
-        play_match.setLayoutY(50);
-        play_match.setLayoutX(170);
+        play_match.setLayoutY(400); //50
+        play_match.setLayoutX(50); //170
         Button bMenu = new Button("Settings");
         bMenu.setPrefSize(200,50);
-        bMenu.setLayoutY(100);
-        bMenu.setLayoutX(170);
+        bMenu.setLayoutY(400); //100
+        bMenu.setLayoutX(350); //170
         menuRoot.getChildren().add(bMenu);
 
 
 
         menuRoot.getChildren().add(exit);
         Color background = Color.rgb(60, 124, 83);
-        Scene MainScene = new Scene(menuRoot, 540, 280, background);
+        Scene MainScene = new Scene(menuRoot, 900, 1000, background); //w:540, h:280
 
         Stage menuWindow = new Stage();
-        menuWindow.setTitle("Second Stage");
+        menuWindow.setTitle("Main Menu");
         menuWindow.setScene(MainScene);
         EventHandler<ActionEvent> startGameFromMenu = new EventHandler<>() {
             public void handle(ActionEvent e)
@@ -133,10 +146,10 @@
                 settingsRoot.getChildren().add(save_and_exit);
 
 
+                Color background = Color.rgb(60, 124, 83);
 
 
-
-                Scene settingScene = new Scene(settingsRoot, 540, 280);
+                Scene settingScene = new Scene(settingsRoot, 540, 280, background);
 
                 // New window (Stage)
                 Stage menu = new Stage();
@@ -193,7 +206,7 @@
 
 
 
-     //     }
+        //     }
     }
     private void initGame(Stage stage) throws MalformedURLException, FileNotFoundException {
         EventHandler<javafx.scene.input.MouseEvent> eh1 = new EventHandler<javafx.scene.input.MouseEvent>() {
@@ -419,6 +432,7 @@
         iv[2].setFitWidth(120);
         iv[2].setPreserveRatio(true);
         iv[2].setOnMouseClicked(eh3);
+
         for (int j = 0; j < 2; j++) {
             System.out.println("Player Number: " + j);
             System.out.println("");
@@ -441,7 +455,7 @@
         Scene scene = new Scene(root, Color.GREEN);
         stage.setTitle("Briscola");
         stage.setScene(scene);
-        stage.setHeight(500);
+        stage.setHeight(700);
         stage.setWidth(700);
         stage.show();
     }
@@ -454,39 +468,43 @@
         Button b2 = new Button("Exit");
 
         Group root2 = new Group();
+
+        b.setLayoutX(170);
+        b.setLayoutY(160);
+
         root2.getChildren().add(b);
-
-        Text gameOver = new Text("Game over");
-        gameOver.setX(200);
-        gameOver.setY(100);
-
-        root2.getChildren().add(gameOver);
-        Text whoWon = null;
-        if(!g.isTeamGame){
-            int whichPlayerWon = 1;
-
-            if(g.players.get(0).Score()<g.players.get(1).Score()){
-                whichPlayerWon=2;
-                whoWon= new Text("The winning player is: " + whichPlayerWon);
-
-            }
-        }
-        else{
-            int whichPlayerWon = 1;
-
-            if(g.getScoreForTeam(1)>g.getScoreForTeam(0)){
-                whichPlayerWon=2;
-            }
-            whoWon = new Text("The winning team is: " + whichPlayerWon);
+        int whichPlayerWon = 1;
+        if(g.players.get(0).Score()<g.players.get(1).Score()){
+            whichPlayerWon=2;
         }
-        whoWon.setY(50);
-        b2.setLayoutY(60);
+        Text gameOver = new Text("Game over");
+        gameOver.setX(120);
+        gameOver.setY(100);
+        gameOver.setFill(Color.WHITE);
+        gameOver.setStrokeWidth(2);
+        gameOver.setStroke(Color.BLACK);
+        gameOver.setFont(Font.font("verdana", 50));
+
+        root2.getChildren().add(gameOver);
+
+        Text whoWon = new Text("The winning player is: " + whichPlayerWon);
+        whoWon.setFont(Font.font("verdana", FontWeight.BOLD, 10));
+        whoWon.setX(160);
+        whoWon.setY(120);
+
+        Text score = new Text("Score: " + g.players.get(whichPlayerWon).Score());
+        score.setX(165);
+        score.setY(140);
+        b2.setLayoutX(205);
+        b2.setLayoutY(200);
 
         root2.getChildren().add(whoWon);
+        root2.getChildren().add(score);
         root2.getChildren().add(b2);
 
+        Color background = Color.rgb(60, 124, 83);
 
-        Scene secondScene = new Scene(root2, 540, 280);
+        Scene secondScene = new Scene(root2, 540, 280, background);
 
         // New window (Stage)
         Stage newWindow = new Stage();
@@ -536,7 +554,7 @@
         stage.hide();
         g = null;
         iv = new ImageView[5];
-        deck.clear();
+        deck = new ImageView[40];
         EventHandler<javafx.scene.input.MouseEvent> eh1;
         EventHandler<javafx.scene.input.MouseEvent> eh2;
         EventHandler<javafx.scene.input.MouseEvent> eh3;
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"/opt/gradle/gradle-7.4.2\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 650a76541e1c143cd99a54fb8ca3a6bbc4864072)
+++ b/.idea/gradle.xml	(date 1665573558311)
@@ -4,9 +4,11 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="delegatedBuild" value="true" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleHome" value="/opt/gradle/gradle-7.4.2" />
+        <option name="gradleJvm" value="openjdk-18" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 650a76541e1c143cd99a54fb8ca3a6bbc4864072)
+++ b/.idea/misc.xml	(date 1665573558247)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3cb919d9-4513-467c-8673-82dc35665e7b\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/gradle.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/gradle.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build.gradle\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradlew\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradlew\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/settings.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/settings.gradle\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Cards/Card.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Cards/Card.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Game/GameSession.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Game/GameSession.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Project-2-1\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2EklyMi2aeKintDw5FwT0egRWQy\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"true\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../../../../Libraries/javafx-sdk-19/src.zip\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15722656\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.15109573\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pathVariables\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.HelloApplication (1)\">\r\n    <configuration name=\"HelloApplication (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.project_2.HelloApplication\" />\r\n      <module name=\"Project_2.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.project_2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.project_2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Project-2-1\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" nameIsGenerated=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list />\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Project-2-1\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Project-2-1\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Gradle.Project-2-1\" />\r\n      <item itemvalue=\"Application.HelloApplication (1)\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.HelloApplication (1)\" />\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3cb919d9-4513-467c-8673-82dc35665e7b\" name=\"Changes\" comment=\"\" />\r\n      <created>1663147723627</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1663147723627</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 650a76541e1c143cd99a54fb8ca3a6bbc4864072)
+++ b/.idea/workspace.xml	(date 1665573558232)
@@ -5,16 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3cb919d9-4513-467c-8673-82dc35665e7b" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/gradlew" beforeDir="false" afterPath="$PROJECT_DIR$/gradlew" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/settings.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/settings.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Cards/Card.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Cards/Card.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Game/GameSession.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Game/GameSession.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/project_2/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/project_2/HelloApplication.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -64,10 +57,10 @@
     <property name="Repository.Attach.JavaDocs" value="false" />
     <property name="Repository.Attach.Sources" value="false" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/../../../../../Libraries/javafx-sdk-19/src.zip" />
-    <property name="project.structure.last.edited" value="Libraries" />
+    <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.15722656" />
     <property name="project.structure.side.proportion" value="0.15109573" />
-    <property name="settings.editor.selected.configurable" value="preferences.pathVariables" />
+    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.project.gradle" />
   </component>
   <component name="RunManager" selected="Application.HelloApplication (1)">
     <configuration name="HelloApplication (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
@@ -128,8 +121,8 @@
     </configuration>
     <list>
       <item itemvalue="Application.HelloApplication" />
-      <item itemvalue="Gradle.Project-2-1" />
       <item itemvalue="Application.HelloApplication (1)" />
+      <item itemvalue="Gradle.Project-2-1" />
     </list>
     <recent_temporary>
       <list>
@@ -160,4 +153,8 @@
       </map>
     </option>
   </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
+  </component>
 </project>
\ No newline at end of file
